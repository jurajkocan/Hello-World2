"use strict";
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var Applicative_1 = require("./Applicative");
var either = require("./Either");
var Ops = /** @class */ (function () {
    function Ops() {
    }
    Ops.prototype.chain = function (F) {
        return function (f, fa) { return F.chain(function (e) { return e.fold(function (l) { return F.of(either.left(l)); }, function (a) { return f(a); }); }, fa); };
    };
    Ops.prototype.right = function (F) {
        return function (ma) { return F.map(function (a) { return either.right(a); }, ma); };
    };
    Ops.prototype.left = function (F) {
        return function (ml) { return F.map(function (l) { return either.left(l); }, ml); };
    };
    Ops.prototype.fromEither = function (F) {
        return function (oa) { return F.of(oa); };
    };
    Ops.prototype.fold = function (F) {
        return function (left, right, fa) { return F.map(function (e) { return e.fold(left, right); }, fa); };
    };
    Ops.prototype.mapLeft = function (F) {
        return function (f) { return function (fa) { return F.map(function (e) { return e.mapLeft(f); }, fa); }; };
    };
    Ops.prototype.toOption = function (F) {
        return function (fa) { return F.map(function (e) { return e.toOption(); }, fa); };
    };
    Ops.prototype.getEitherT = function (M) {
        var applicativeComposition = Applicative_1.getApplicativeComposition(M, either);
        return __assign({}, applicativeComposition, { chain: this.chain(M) });
    };
    return Ops;
}());
exports.Ops = Ops;
var ops = new Ops();
exports.chain = ops.chain;
exports.right = ops.right;
exports.left = ops.left;
exports.fromEither = ops.fromEither;
exports.fold = ops.fold;
exports.mapLeft = ops.mapLeft;
exports.toOption = ops.toOption;
exports.getEitherT = ops.getEitherT;
//# sourceMappingURL=EitherT.js.map