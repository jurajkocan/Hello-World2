"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var function_1 = require("./function");
var Ops = /** @class */ (function () {
    function Ops() {
    }
    Ops.prototype.map = function (F) {
        return function (f, fa) { return function (s) { return F.map(function (_a) {
            var a = _a[0], s1 = _a[1];
            return function_1.tuple(f(a), s1);
        }, fa(s)); }; };
    };
    Ops.prototype.of = function (F) {
        return function (a) { return function (s) { return F.of(function_1.tuple(a, s)); }; };
    };
    Ops.prototype.ap = function (F) {
        var _this = this;
        return function (fab, fa) { return _this.chain(F)(function (f) { return _this.map(F)(f, fa); }, fab); }; // <- derived
    };
    Ops.prototype.chain = function (F) {
        return function (f, fa) { return function (s) { return F.chain(function (_a) {
            var a = _a[0], s1 = _a[1];
            return f(a)(s1);
        }, fa(s)); }; };
    };
    Ops.prototype.get = function (F) {
        return function () { return function (s) { return F.of(function_1.tuple(s, s)); }; };
    };
    Ops.prototype.put = function (F) {
        return function (s) { return function () { return F.of(function_1.tuple(undefined, s)); }; };
    };
    Ops.prototype.modify = function (F) {
        return function (f) { return function (s) { return F.of(function_1.tuple(undefined, f(s))); }; };
    };
    Ops.prototype.gets = function (F) {
        return function (f) { return function (s) { return F.of(function_1.tuple(f(s), s)); }; };
    };
    Ops.prototype.getStateT = function (M) {
        return {
            map: this.map(M),
            of: this.of(M),
            ap: this.ap(M),
            chain: this.chain(M)
        };
    };
    return Ops;
}());
exports.Ops = Ops;
var ops = new Ops();
exports.map = ops.map;
exports.of = ops.of;
exports.ap = ops.ap;
exports.chain = ops.chain;
exports.get = ops.get;
exports.put = ops.put;
exports.modify = ops.modify;
exports.gets = ops.gets;
exports.getStateT = ops.getStateT;
//# sourceMappingURL=StateT.js.map