export interface HKT<URI, A> {
    readonly _URI: URI;
    readonly _A: A;
}
export interface HKT2<URI, L, A> extends HKT<URI, A> {
    readonly _L: L;
}
export interface HKT3<URI, U, L, A> extends HKT2<URI, L, A> {
    readonly _U: U;
}
export interface URI2HKT<A> {
}
export interface URI2HKT2<L, A> {
}
export interface URI2HKT3<U, L, A> {
}
export declare type HKTS = (URI2HKT<any> & {
    never: HKT<never, never>;
})[keyof URI2HKT<any> | 'never']['_URI'];
export declare type HKT2S = (URI2HKT2<any, any> & {
    never: HKT<never, never>;
})[keyof URI2HKT2<any, any> | 'never']['_URI'];
export declare type HKT3S = (URI2HKT3<any, any, any> & {
    never: HKT<never, never>;
})[keyof URI2HKT3<any, any, any> | 'never']['_URI'];
export declare type HKTAs<URI extends HKTS, A> = URI2HKT<A>[URI];
export declare type HKT2As<URI extends HKT2S, L, A> = URI2HKT2<L, A>[URI];
export declare type HKT3As<URI extends HKT3S, U, L, A> = URI2HKT3<U, L, A>[URI];
