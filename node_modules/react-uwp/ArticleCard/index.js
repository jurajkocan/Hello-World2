"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var PropTypes = require("prop-types");
var Icon_1 = require("../Icon");
var Image_1 = require("../Image");
var shallowEqual_1 = require("../common/shallowEqual");
var ArticleCard = (function (_super) {
    __extends(ArticleCard, _super);
    function ArticleCard() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.getNormalColor = function (context) { return (Math.random() < 0.875 ?
            "linear-gradient(0deg, rgba(0, 0, 0, 0.85) 0%, rgba(0, 0, 0, 0.25) 35%, transparent 100%)" :
            context.theme.listAccentMedium); };
        _this.state = {
            isHovered: false,
            normalColor: _this.getNormalColor(_this.context)
        };
        _this.handleMouseEnter = function (e) {
            _this.setState({
                isHovered: true
            });
        };
        _this.handleMouseLeave = function (e) {
            _this.setState({
                isHovered: false
            });
        };
        return _this;
    }
    ArticleCard.prototype.shouldComponentUpdate = function (nextProps, nextState, nextContext) {
        this.state.normalColor = this.getNormalColor(nextContext);
        return (!shallowEqual_1.default(nextProps, this.props) ||
            !shallowEqual_1.default(nextState, this.state) ||
            !shallowEqual_1.default(nextContext, this.context));
    };
    ArticleCard.prototype.render = function () {
        var _a = this.props, author = _a.author, category = _a.category, authorImage = _a.authorImage, like = _a.like, secondaryTitle = _a.secondaryTitle, time = _a.time, comments = _a.comments, title = _a.title, image = _a.image, href = _a.href, size = _a.size, attributes = __rest(_a, ["author", "category", "authorImage", "like", "secondaryTitle", "time", "comments", "title", "image", "href", "size"]);
        var theme = this.context.theme;
        var _b = this.state, isHovered = _b.isHovered, normalColor = _b.normalColor;
        var styles = getStyles(this);
        return (React.createElement("a", __assign({}, attributes, { rel: "noopener", onMouseEnter: this.handleMouseEnter, onMouseLeave: this.handleMouseLeave, style: __assign({}, styles.container, theme.prefixStyle(attributes.style)) }),
            image && (React.createElement(Image_1.default, { useLazyLoad: true, useDivContainer: true, src: image, style: styles.image, placeholder: React.createElement("div", { style: styles.imagePlaceholder },
                    React.createElement(Icon_1.default, { style: {
                            color: theme.baseMedium,
                            fontSize: 80,
                            textDecoration: "none"
                        }, hoverStyle: {} }, "\uEB9F")) })),
            React.createElement("div", { style: __assign({}, styles.content, { background: isHovered ? "transparent" : (image ? normalColor : theme.listAccentMedium) }) },
                React.createElement("p", { style: theme.prefixStyle({ fontSize: 12, color: "#fff", textAlign: "left", opacity: (isHovered && image) ? 0 : 1, transition: "all .5s 0s ease-in-out" }) }, title))));
    };
    ArticleCard.defaultProps = {
        target: "_blank",
        size: 200
    };
    ArticleCard.contextTypes = { theme: PropTypes.object };
    return ArticleCard;
}(React.Component));
exports.default = ArticleCard;
function getStyles(instance) {
    var size = instance.props.size;
    var isHovered = instance.state.isHovered;
    var context = instance.context;
    var theme = context.theme;
    var prefixStyle = theme.prefixStyle;
    return {
        container: prefixStyle({
            position: "relative",
            color: theme.baseMediumHigh,
            background: theme.chromeMedium,
            fontSize: 14,
            width: size,
            height: size,
            overflow: "hidden",
            margin: 2,
            flex: "1 1 auto",
            flexDirection: "column",
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            textDecoration: "none"
        }),
        image: prefixStyle({
            width: "100%",
            height: "100%",
            display: "flex",
            flexDirection: "row",
            alignItems: "center",
            justifyContent: "center",
            backgroundSize: "cover"
        }),
        imagePlaceholder: prefixStyle({
            width: "100%",
            height: "100%",
            display: "flex",
            flexDirection: "row",
            alignItems: "center",
            justifyContent: "center"
        }),
        content: prefixStyle({
            position: "absolute",
            top: 0,
            left: 0,
            transition: "all .5s 0s ease-in-out",
            display: "flex",
            flexDirection: "column",
            justifyContent: "flex-end",
            alignItems: "center",
            width: "100%",
            height: "100%",
            padding: 12
        })
    };
}
//# sourceMappingURL=index.js.map