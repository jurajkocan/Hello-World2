/// <reference types="react" />
import * as React from "react";
import * as PropTypes from "prop-types";
export interface DataProps {
    author?: string;
    category?: string;
    authorImage?: string;
    like?: string;
    secondaryTitle?: string;
    time?: Date;
    comments?: string[];
    title?: string;
    image?: string;
    href?: string;
    size?: number;
    target?: string;
}
export interface ArticleCardProps extends DataProps, React.HTMLAttributes<HTMLAnchorElement> {
}
export interface ArticleCardState {
    isHovered?: boolean;
    normalColor?: string;
}
export default class ArticleCard extends React.Component<ArticleCardProps, ArticleCardState> {
    static defaultProps: ArticleCardProps;
    static contextTypes: {
        theme: PropTypes.Requireable<any>;
    };
    context: {
        theme: ReactUWP.ThemeType;
    };
    getNormalColor: (context: {
        theme: ReactUWP.ThemeType;
    }) => string;
    state: ArticleCardState;
    handleMouseEnter: (e: any) => void;
    handleMouseLeave: (e: any) => void;
    shouldComponentUpdate(nextProps: ArticleCardProps, nextState: ArticleCardState, nextContext: {
        theme: ReactUWP.ThemeType;
    }): boolean;
    render(): JSX.Element;
}
